// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Course {
  id              String            @id @default(cuid())
  name            String
  quotas          Quota[]
  ApplicantChoice ApplicantChoice[]
}

model Quota {
  id              String            @id @default(cuid())
  name            String
  seats           Int
  courseId        String
  course          Course            @relation(fields: [courseId], references: [id])
  Allotment       Allotment[]
  ApplicantChoice ApplicantChoice[]
  code            String?
}

model Applicant {
  id              String            @id @default(cuid())
  applicationNo   String            @unique
  name            String
  email           String            @unique
  dateOfBirth     DateTime
  district        String
  state           String
  street          String
  school          String
  graduationYear  Int
  percentage      Float
  major           String
  phone           String
  address         String
  isNRI           Boolean
  allotments      Allotment[]
  ApplicantChoice ApplicantChoice[]
  currentPriority Int?
}

model ApplicantChoice {
  priority    Int
  quotaId     String?
  quota       Quota?    @relation(fields: [quotaId], references: [id])
  applicantId String
  applicant   Applicant @relation(fields: [applicantId], references: [id])
  courseId    String
  course      Course    @relation(fields: [courseId], references: [id])

  @@id([applicantId, priority])
  @@unique([applicantId, courseId])
}

model Allotment {
  id          String    @id @default(cuid())
  quotaId     String
  quota       Quota     @relation(fields: [quotaId], references: [id])
  applicantId String
  applicant   Applicant @relation(fields: [applicantId], references: [id])
  course_id   String
}
