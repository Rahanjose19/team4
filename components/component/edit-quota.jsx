"use client"
/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/4U13WdeBLlz
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Arimo } from 'next/font/google'
import { Libre_Franklin } from 'next/font/google'

arimo({
  subsets: ['latin'],
  display: 'swap',
})

libre_franklin({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { SelectValue, SelectTrigger, SelectItem, SelectContent, Select } from "@/components/ui/select"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { useState , useEffect } from "react"
import { useRouter } from "next/navigation"
import { useParams } from "next/navigation"
export function EditQuota() {
  const { id } = useParams();
  const router = useRouter();
  const [courses, setCourses] = useState([]);
  const [quotas , setQuotas] = useState([]);
  const [isLoaded, setIsLoaded] = useState(false);
  const handleUpdate = async () => {
    const response = await fetch(`/api/courses/${id}`, {
      method: "PUT",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ quotas }),
    });
    const data = await response.json();
    setQuotas(data);
    console.log(data);
  };
  const [newQuota, setNewQuota] = useState({name: 'newQuota', seats: 0});
  const [sum,setSum] = useState(0);

  const addQuota = () =>{
    console.log("add quota");
  setQuotas([...quotas, newQuota]);
  setNewQuota({name: '', seats: 0});
  }

  useEffect(() => {
    setIsLoaded(false);
    const fetchCourses = async () => {

      const response = await fetch("/api/courses");
      const data = await response.json();
      setCourses(data);
      setIsLoaded(true);
    };
    fetchCourses();
  }, []);

  useEffect(() => {
    setIsLoaded(false);
    const fetchCourse = async () => {
      const response = await fetch(`/api/courses/${id}`);
      const data = await response.json();
      setQuotas(data.quotas);
      setSum(data.quotas.reduce((acc, q) => acc + q.seats, 0));
      setIsLoaded(true);
      console.log(data);
    };
    fetchCourse();
  }
  , [id]);
  return (
    ( 
    <div className="container mx-auto px-4 py-8 md:py-12">
      <div className="flex items-center justify-between mb-6">
        <h1 className="text-2xl font-bold">Course Selection</h1>
        <div className="w-56">
          <Select 
          defaultValue={id}
          onValueChange={
            (value) => {
              router.push(`/edit/${value}`);
            }
          }>
            <SelectTrigger>
              <SelectValue placeholder="Select a course" />
            </SelectTrigger>
            <SelectContent>
              {courses.map((course) => (
                <SelectItem key={course.id} value={course.id}>
                  {course.name}
                </SelectItem>
              ))}
            </SelectContent>
          </Select>
        </div>
      </div>
      <div className="overflow-x-auto">
        <table className="w-full table-auto border-collapse">
          <thead>
            <tr className="bg-gray-100 dark:bg-gray-800">
              <th className="px-4 py-3 text-left font-medium">Quota</th>
              <th className="px-4 py-3 text-center font-medium w-40">Seats</th>
              <th className="px-4 py-3 text-right font-medium">
                <Button size="sm" variant="outline" onClick={addQuota}>
                  <PlusIcon className="w-4 h-4 mr-2" />
                  Add Quota
                </Button>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td className="px-4 py-3 font-medium">Total</td>
              <td className="px-4 py-3 text-center">{sum}</td>
              <td className="px-4 py-3 text-right">
              </td>
            </tr>
              {
                quotas.map((quota, index) => (
                  <tr key={quota.id}>
<td className="px-4 py-3 font-medium">
<Input className="w-40 text-left" value={quota.name} onChange={
  (e) => {
    const value = e.target.value;
    setQuotas(
      quotas.map((q, i) => {
        if (i === index) {
          return {
            ...q,
            name: value,
          };
        }
        return q;
      })
    );
  }
}
  />
</td>                    <td className="px-4 py-3 text-right">                  
                      <Input type="number" className="text-center" value={quota.seats} 
                        onChange={
                          (e) => {
                            const value = e.target.value;
                            let totalSum = sum;
                            totalSum -= parseInt(quotas[index].seats) || 0;
                            totalSum += parseInt(value) || 0;
                            setSum(parseInt(totalSum));
                            setQuotas(
                              quotas.map((q, i) => {
                                if (i === index) {
                                  return {
                                    ...q,
                                    seats: value,
                                  };
                                }
                                return q;
                              })
                            );
                          }
                        }
                      />
</td>
                    <td className="px-4 py-3 text-right">
                      <div className="flex items-center justify-end gap-2">
                        
                      </div>
                    </td>
                  </tr>
                ))
              }
              <Button size="sm" variant="outline" className="m-4 bg-black text-white"
                onClick={handleUpdate}
              >
                update
                          <CheckIcon className="w-4 h-4" />
                        </Button>
          </tbody>
        </table>
      </div>
    </div>)
  );
}

function CheckIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M20 6 9 17l-5-5" />
    </svg>)
  );
}


function PlusIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M5 12h14" />
      <path d="M12 5v14" />
    </svg>)
  );
}
